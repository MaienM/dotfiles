# Set the escape sequence to M-`
set -g prefix `
unbind-key C-b
bind a send-prefix

# Vi style moving around.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Switching to the last window/pane.
bind ` last-window
bind Tab last-pane

# Resizing panes.
bind C-k resize-pane -U
bind C-j resize-pane -D
bind C-h resize-pane -L
bind C-l resize-pane -R
bind M-k resize-pane -U 5
bind M-j resize-pane -D 5
bind M-h resize-pane -L 5
bind M-l resize-pane -R 5

# Break pane into a new window, or window into a new session.
bind ! break-pane
bind @ run-shell '~/.tmux/scripts/break-window.sh "#S:#I"'

# Join pane to the current window, or window to the current session.
bind M-1 run-shell 'prompt="(join-pane) " ~/.tmux/scripts/switcher.sh panes "tmux join-pane -h -t \"#S:#I\" -s \"%%\""'
bind M-2 run-shell 'prompt="(join-window) " ~/.tmux/scripts/switcher.sh windows "~/.tmux/scripts/join-window.sh \"#S\" \"%%\""'

# Manage sessions more easily.
bind Z run-shell 'prompt="(copy-session) " ~/.tmux/scripts/switcher.sh sessions "tmux new-session -s copy -t \"%%\""'
bind X run-shell 'prompt="(save-and-kill-session) " ~/.tmux/scripts/switcher.sh sessions "~/.tmux/scripts/save-and-kill-session.sh \"%%\""'
bind M-X run-shell 'prompt="(kill-session) " ~/.tmux/scripts/switcher.sh sessions "tmux kill-session \"%%\""'
bind C command-prompt "new-session -c '#{pane_current_path}' -s '%%'"
bind V run-shell 'tmux new-window -t :999 -n restore-session -k ~/.tmux/scripts/restore-session.sh'

# Quick window/session changing using fzf.
bind s run-shell 'prompt="(switch-client) " ~/.tmux/scripts/switcher.sh sessions "tmux switch-client -t %%"'
bind w run-shell 'prompt="(switch-client) " ~/.tmux/scripts/switcher.sh windows "tmux switch-client -t %%"'

# New windows/panes use the current path.
bind c new-window -c "#{pane_current_path}"
bind M-c new-window -c "#{pane_current_path}" -t +0 -a
bind | split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

# Re-layout the current pane with the one before it. This will result in a layout like if it were just split off from
# the other pane.
bind M-| move-pane -h -t '.-'
bind 'M-"' move-pane -t '.-'

# Change layout mappings.
unbind Space
unbind M-3
unbind M-4
bind M-l next-layout

# Change . into a hybdrid swap/move window, and alt-. an insert window at.
bind . command-prompt -p '(move-or-swap-window)' "if-shell 'tmux list-panes -t %1' 'swap-window -t %1' 'move-window -t %1'"
bind M-. command-prompt -p '(insert-window)' "run '~/.tmux/scripts/insert-window.sh %1'"

# Enable mouse (scrolling, selection, etc).
set -g mouse on

# Enable xterm-keys (so I can use stuff like ctrl-pageup in vim).
set -g xterm-keys on

# Make tmux set the xterm title.
set -g set-titles on
set -g set-titles-string '#H [#S:#W] #T'

# Allow renaming the pane.
bind M-< if-shell \
	'[ "$(tmux show-options -v -w pane-border-status)" = "top" ]' \
	'set -w pane-border-status off' \
	'set -w pane-border-status top'
bind < command-prompt -p '(rename-pane)' -I "#T" "select-pane -T '%%'"

# Set the TERM value tmux uses.
set -g default-terminal screen-256color

# Set the escape/alt timeout to 50ms, instead of the default 500ms.
set -sg escape-time 50

# Start numbering at 1. This makes more sense when switching with <Prefix><Num>.
set -g base-index 1
set -g pane-base-index 1

# MOAR HISTORY.
set -g history-limit 100000

# Reset terminal overrides to default
set -us terminal-overrides

# Passthrough cursor changes, for nvim
# See https://github.com/neovim/neovim/pull/3165
set -sa terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Assume truecolor support
set -sa terminal-overrides ",*:Tc"

# Enable passthrough sequence.
set -g allow-passthrough

# Only shrink the window to the smallest connected size when REALLY needed.
setw -g aggressive-resize on

# Load nerdfont icons.
run-shell ~/.tmux/scripts/load-nerdfonts.sh
source ~/.cache/tmux/nerdfont_icons_all.tmux

# Theme, generated by tmuxline
source ~/.tmux/tmuxline.conf

# Theme tweaks
set -g window-status-last-style fg=blue

# Session management
set -g @resurrect-processes 'vi ~vim ~nvim ~man less more most tail top htop watch irssi weechat mutt ~npm ~yarn ~pnpm'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
run-shell ~/.tmux/bundle/resurrect/resurrect.tmux
run-shell ~/.tmux/bundle/continuum/continuum.tmux
