#!/usr/bin/env bash

dir="$PWD"
args=()
while [ $# -gt 0 ]; do
	if [ "$1" = "-d" ] && [ -n "$2" ]; then
		dir="$2"
		shift 2
	else
		args=("${args[@]}" "$1")
		shift
	fi
done
dir="$(realpath "$dir")"

hash="$(md5sum <<<"$dir" | cut -c1-32)"
inputsocket="/tmp/neuron-socket-in-$hash"
output="/tmp/neuron-socket-out-$hash"

if [ ! -p "$inputsocket" ] || [ ! -d "$output" ]; then
	echo >&2 "No neuron worker is running for '$dir', please start one first."
	exit 1
fi

pid="$$"
outputpid="$output/$pid"
outputstatussocket="$outputpid/status"
outputstdoutsocket="$outputpid/stdout"
outputstderrsocket="$outputpid/stderr"

trap 'rm -rf "$outputpid"' EXIT ERR INT
rm -rf "$outputpid"

mkdir "$outputpid"
mkfifo -m 600 "$outputstatussocket"
mkfifo -m 600 "$outputstdoutsocket"
mkfifo -m 600 "$outputstderrsocket"

exec 4>"$inputsocket"
(
	printf '%q ' "$pid" neuron -d /zettelkasten "${args[@]}"
	printf '\n'
) >&4

exec 5<"$outputstatussocket"
cat "$outputstdoutsocket" &
cat "$outputstderrsocket" >&2 &

read -u 5 -r status
exit "$status"
