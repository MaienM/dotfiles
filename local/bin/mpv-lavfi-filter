#!/usr/bin/env sh

set -e

input="$(mktemp --suffix='.json')"
output="$(mktemp --suffix='.json')"
mpv-control '{"command":["get_property", "vf"]}' | jq '.data' > "$input"
mapfile -t picks < <(
	jq -r \
		'
		to_entries |
		map(
			(.value.name | rtrimstr("-disabled")) as $name |
			select($name != "lavfi") |
			[
				.key,
				(.value | tostring),
				"\($name)=\(.value.params | to_entries | map("\(.key)=\(.value)") | join(":"))",
				if .value.label then "(\(.value.label))" else "" end
			] | join(" ")
		) | .[]' \
		"$input" \
	| fzf --multi --with-nth='3..' --preview='echo {2} | yj -jy'
)
mapfile -t ids < <(printf '%s\n' "${picks[@]}" | awk '{ print $1 }')
mapfile -t filters < <(printf '%s\n' "${picks[@]}" | awk '{ print $3 }')

case "$(printf '%s\n' "${picks[@]}" | awk '{ print $2 }' | jq -s -r 'map(.name) | join("/")')" in 
	'crop/crop')
		# Two crops, assume side-by-side in order left, right.
		result="
			[vid1] split [vl][vr];
			[vl] ${filters[0]} [vl];
			[vr] ${filters[1]} [vr];
			[vl][vr] hstack
		"
	;;
	'crop/crop/crop')
		# Three crops, assume vertically stacked in order top, middle, bottom.
		result="
			[vid1] split [vt][vm];
			[vm] split [vm][vb];
			[vt] ${filters[0]} [vt];
			[vm] ${filters[1]} [vm];
			[vb] ${filters[2]} [vb];
			[vt][vm] vstack [vm];
			[vm][vb] vstack
		"
	;;
	'crop/crop/crop/crop')
		# Four crops, assume 2x2 grid in order top left, top right, bottom left, bottom right.
		result="
			[vid1] split [vt][vb];
			[vt] split [vtl][vtr];
			[vtl] ${filters[0]} [vtl];
			[vtr] ${filters[1]} [vtr];
			[vtl][vtr] hstack [vt];
			[vb] split [vbl][vbr];
			[vbl] ${filters[2]} [vbl];
			[vbr] ${filters[3]} [vbr];
			[vbl][vbr] hstack [vb];
			[vt][vb] vstack
		"
	;;
	*)
		# Other, don't make any assumptions.
		result="$(printf '%s\n' "${filters[@]}")"
	;;
esac
result="$(echo "$result" | sed '/^\s*$/d; s/^\s*//')"
jq \
	--arg ids "${ids[*]}" \
	--arg result "$result" \
	'
		($ids | split(" ") | map(tonumber)) as $ids |
		. |
		to_entries |
		map(
			if (.key | in($ids)) then
				.value + { "name": "\(.value.name | rtrimstr("-disabled"))-disabled", "enabled": false }
			else
				.value
			end
		) + [{
			"name": "lavfi",
			"enabled": true,
			"params": { "graph": $result },
		}]
	' "$input" > "$output"

mpv-edit-property vf "$output"
