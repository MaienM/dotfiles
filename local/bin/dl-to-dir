#!/usr/bin/env bash

shopt -s extglob

orig_url="$1"
dir="${2%%/}"

echo "url=$orig_url"
echo "dir=$dir"

if [ -z "$orig_url" ] || [ -z "$dir" ]; then
	echo >&2 "Usage: $0 url dir"
	exit 1
fi
if [ ! -d "$dir" ]; then
	echo >&2 "'$dir' is not a directory."
	exit 1
fi

md5() {
	md5sum "$1" | cut -c-32
}
sha256() {
	sha256sum "$1" | cut -c-64
}

# Try alternative urls.
urls=(
	# Strip query parameters in case they lower the resolution.
	"$(echo "$orig_url" | sed 's/width=[[:digit:]]\+[?&]\?//g; s/height=[[:digit:]]\+[?&]\?//g; s/?$//')"
	"${orig_url%%\?*}"
	# The original url.
	"$orig_url"
	# The original url with a suffix, for cases like a non-hotlinked imgur url.
	"$orig_url.png"
	"$orig_url.jpg"
)
while [ -z "$tmp" ] && read -r url; do
	echo "Trying url '$url'."

	# Download the file and grab the resulting filename.
	tmp="$(wget --directory-prefix=/tmp "$url" --output-file=- --no-verbose | grep -E -- '-> "/tmp' | sed 's!^.* -> "\(/tmp/.*\)" \[1]$!\1!')"
	if [ -z "$tmp" ]; then
		echo >&2 "Unable to get filename of downloaded file."
		continue
	fi

	# Make sure the downloaded file is an image or video, otherwise fall back to opening normally.
	case "$(file --brief --mime-type "$tmp")" in
		video/*) ;;
		image/*) ;;

		*)
			echo "Attempted URL did not refer an image or video."
			tmp=
		;;
	esac
done < <(printf '%s\n' "${urls[@]}" | uniq)
if [ -z "$tmp" ]; then
	echo >&2 "URL did not refer to an image or video."
	exit 1
fi

# Get the filename.
fn="$(basename "$tmp")"
fn="${fn%%.*([0-9])}"
fn="${fn%%\?*}"

# Try to move the file into the target directory while avoiding naming conflicts.
md5new="$(md5 "$tmp")"
ext="${fn##*.}"
for target in "$dir/$fn" "$dir/$md5new.$ext"; do
	if [ ! -f "$target" ]; then
		mv -n "$tmp" "$target"
		notify-new-file "$target" "Downloaded to $target"
		exit 0
	elif [ "$(md5 "$target")" = "$md5new" ] && [ "$(sha256 "$target")" = "$(sha256 "$tmp")" ]; then
		rm "$tmp"
		notify-new-file "$target" "File already exists at $target"
		exit 0
	fi
done

# This realy only happens if we already have a file with the same md5 sum, but a different sha256 sum. This is very unlikely, but it's also easy enough to handle, so might as well.
while [ -f "$target" ]; do
	target="$dir/$RANDOM.$ext"
done
mv -n "$tmp" "$target"
notify-new-file "$target" "Downloaded to $target"
